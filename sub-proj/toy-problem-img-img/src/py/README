Testing alignment procedures.

align_no_rot : 
Space and image points both lie in the 2d plane.  Projection is a simple translation.  Parameters offset_x and offset_y are determined by the estmate_projection_parameters function.

align_dup_param :
Modified form align_no_rot.  Space and image points both lie in the 2d plane.  Projection is a simple translation.  Parameters are duplicated, so projection parameterized by [x1,x2,y1,y2] is the same as [x3,x4,y3,y4] iff x1+x2 == x3+x4 and y1+y2 == y3+y4.

align_slice_param :
Modified from align_dup_param :  The goal is to have parameters for which the value of the jacobian depends on the position of the space point.  The previous two systems had jacobians (d(param)/d(projection)) which were independent of the space point.  Align_slice_param's param x2 moves the projection in the positive direction if the space point is above the y axis, and in the negative direction otherwise.  Similar for the parameter y2.  The projection of space point (s_x, s_y) = ((s_x + x1 + if(s_y > 0) then x2 else -x2), (s_y + y1 + if(s_x > 0) then y2 else -y2)) 

align_rot_1_param :
projection has a single parameter representing rotation around the origin.   

align_rot_4_param :
Still a rotation solution problem, but there is now one parameter for each element in the rotation matrix.  The downside is that the estimate may (with high liklihood) produce a solution which is not actually a rotation matrix.  The upside is that the code is simpler, and the found solution seems to remove as much of the parameter error as the align_rot_1_param solution.
